<project default="compile">

  <!-- build.xml for commafeed, S13, CS56
       author: Phill Conrad
       author: Mark Nguyen
       author: Daniel Vicory -->

  <property environment="env"/> <!-- load the environment variables -->
  <property name="webRoot" value="${env.HOME}/public_html/cs56" />
  <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}/cs56" />
  <property name="projectName" value="commafeed" />
  <property name="packageName" value="edu.ucsb.cs56.S13.utilities.commafeed" />
  <property name="javadocDest" value="${webRoot}/${projectName}/javadoc" />
  <property name="javadocURL" value="${webBaseURL}/${projectName}/javadoc" />
  <property name="javadocLink" value="http://java.sun.com/javase/7/docs/api/" />
  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="lib/junit-4.8.2.jar"/>
    <pathelement location="lib/commons-codec-1.6.jar"/>
    <pathelement location="lib/commons-logging-1.6.jar"/>
    <pathelement location="lib/fluent-hc-4.2.5.jar"/>
    <pathelement location="lib/httpclient-4.2.5.jar"/>
    <pathelement location="lib/httpclient-cache-4.2.5.jar"/>
    <pathelement location="lib/httpcore-4.2.4.jar"/>
    <pathelement location="lib/httpmime-4.2.5.jar"/>
  </path>

  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source"
	   includeantruntime="false" >
      <compilerarg value="-Xlint"/>
      <classpath refid="project.class.path" />
    </javac>
  </target>


  <target name="javadoc" depends="compile" description="publish javadoc">
    <delete dir="javadoc" quiet="true" />
    <javadoc destdir="javadoc" author="true" version="true" use="true" >
      <fileset dir="src" includes="**/*.java"/>
      <classpath refid="project.class.path" />
      <link href="${javadocLink}" /> <!-- for external links to std API classes -->
    </javadoc>

    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" />

    <!-- copy everything you just made to the javadoc destination,
	 and then make it readable -->
    <copy todir="${javadocDest}" >
      <fileset dir="javadoc"/>
    </copy>

    <!-- Note: this only does the chmod command on the javadoc
	 subdirectory and its contents. You MIGHT have to MANUALLY do the
	 chmod on the parent directories. However, you should only need to do
	 that once.
    -->
    <chmod dir="${javadocDest}" perm="755" type="dir" includes="**" />
    <chmod dir="${javadocDest}" perm="755" type="file" includes="**/*" />
    <echo>Javadoc deployed to ${javadocURL}</echo>
  </target>

  <target name="run" depends="compile" description="runs the class ${mainClass}" >
  </target>


  <target name="test" depends="compile" description="run junit tests">

    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />

      <batchtest fork="yes">
        <fileset dir="src">
          <!-- this will pick up every class with a name ending in Test -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>

      <formatter type="plain" usefile="false" />

    </junit>
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" failonerror="false" verbose="true" />
    <mkdir dir="build" />
    <delete dir="javadoc" failonerror="false" verbose="true" /> <!-- the local copy -->
    <mkdir dir="javadoc" />
  </target>


</project>
